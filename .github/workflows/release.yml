name: Release build
env:
  TAG: "latest"
  DOCKER_ORG: enmasse
  KUBERNETES_NAMESPACE: "enmasse-infra"
  REGISTRY_USER: "enmasse+ci "

on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  unit:
    name: Unit tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.2
    
    - name: Setup Ruby environment with ruby-build
      uses: clupprich/ruby-build-action@v1.0.0

    - name: Install dependencies
      run: ./.github/scripts/install_dep.sh

    - name: Run unit tests
      run: make

    - name: Collect logs
      if: failure()
      run: ./.github/scripts/collectLogs.sh

    - name: Upload artifacts
      if: failure()
      uses: actions/upload-artifact@v1.0.0
      with:
        name: unit-logs
        path: artifacts


  smoke:
    name: Smoke tests and Release
    needs: unit
    env:
      DOCKER_REGISTRY: "quay.io"
      TAG: "latest"
      RELEASE: true
      SMOKE: true
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master      
    
    - name: setup-docker
      run: ./.github/scripts/setup_docker.sh
    
    - name: Minikube setup with registry
      uses: EnMasseProject/minikube-setup@V1.0.0
      with:
        k8s-version: 1.15.0
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.2

    - name: Setup Ruby environment with ruby-build
      uses: clupprich/ruby-build-action@v1.0.0
  
    - name: Install dependencies
      run: ./.github/scripts/install_dep.sh
    
    - name: Setup OLM
      run: ./.travis/setup-olm.sh

    - name: Build
      run: |
        export REGISTRY_PASS=${{ secrets.REGISTRY_PASS }}
        echo $REGISTRY_PASS
        ./.github/scripts/build.sh

    - name: Smoke tests
      run: ./.github/scripts/test.sh

    - name: Collect logs
      if: failure()
      run: ./.github/scripts/collectLogs.sh

    - name: Upload artifacts
      if: failure()
      uses: actions/upload-artifact@v1.0.0
      with:
        name: smoke-logs
        path: artifacts

    - name: Create Release
      if: success() && contains(github.ref, 'refs/tags/v')
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: success() && contains(github.ref, 'refs/tags/v')
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: templates/build/enmasse-${{ steps.release.outputs.tag }}.tgz
        asset_name: enmasse-${{ steps.release.outputs.tag }}.tgz
        asset_content_type: application/gzip

    

#! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
#! parse-kind: ClusterServiceVersion
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: ${application.bundle.prefix}.${olm.version}
  namespace: placeholder
  labels:
    app: enmasse
  annotations:
    categories: "Streaming & Messaging"
    certified: "false"
    description: ${olm.csv.name.long} provides messaging as a managed service on ${olm.csv.platform}
    containerImage: ${env.CONTROLLER_MANAGER_IMAGE}
    createdAt: 2019-02-19T00:00:00Z
    capabilities: Seamless Upgrades
    repository: ${olm.csv.repository}
    support: ${olm.csv.maintainer.name}
    alm-examples: |-
      [
        {
          "apiVersion": "enmasse.io/v1",
          "kind": "MessagingInfrastructure",
          "metadata": {
            "name": "default"
          },
          "spec": {}
        },
        {
          "apiVersion": "enmasse.io/v1",
          "kind": "MessagingProject",
          "metadata": {
            "name": "default"
          },
          "spec": {}
        },
        {
          "apiVersion": "enmasse.io/v1",
          "kind": "MessagingEndpoint",
          "metadata": {
            "name": "on-cluster"
          },
          "spec": {
            "cluster": {},
            "protocols": ["AMQP"]
          }
        },
        {
          "apiVersion": "enmasse.io/v1",
          "kind": "MessagingAddress",
          "metadata": {
            "name": "myqueue"
          },
          "spec": {
            "queue": {}
          }
        },
        {
          "apiVersion": "enmasse.io/v1",
          "kind": "MessagingPlan",
          "metadata": {
            "name": "plan"
          },
          "spec": {}
        },
        {
          "apiVersion": "enmasse.io/v1",
          "kind": "MessagingAddressPlan",
          "metadata": {
            "name": "plan"
          },
          "spec": {}
        },
        {
          "apiVersion": "iot.enmasse.io/v1alpha1",
          "kind": "IoTConfig",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "adapters": {
              "mqtt": {
                "endpoint": {
                  "secretNameStrategy": {
                    "secretName": "iot-mqtt-adapter-tls"
                  }
                }
              }
            },
            "services": {
              "deviceRegistry": {
                "file": {
                  "numberOfDevicesPerTenant": 1000
                }
              }
            }
          }
        },
        {
          "apiVersion": "iot.enmasse.io/v1alpha1",
          "kind": "IoTProject",
          "metadata": {
            "name": "iot"
          },
          "spec": {
            "downstreamStrategy": {
              "managedStrategy": {
                "addressSpace": {
                  "name": "iot",
                  "plan": "standard-unlimited"
                },
                "addresses": {
                  "command": {
                    "plan": "standard-small-anycast"
                  },
                  "event": {
                    "plan": "standard-small-queue"
                  },
                  "telemetry": {
                    "plan": "standard-small-anycast"
                  }
                }
              }
            }
          }
        }
      ]

spec:
  maturity: ${olm.csv.maturity}
  displayName: ${olm.csv.name.short}
  description: |
    **${olm.csv.name.long}** provides messaging as a managed service on ${olm.csv.platform}.
    With ${olm.csv.name.short}, administrators can configure a cloud-native,
    multi-tenant messaging service either in the cloud or on premise.
    Developers can provision messaging using the ${olm.csv.name.long} Console.
    Multiple development teams can provision the brokers and queues from the
    console, without requiring each team to install, configure, deploy,
    maintain, or patch any software. 

    **The core capabilities include:**

      * **Built-in authentication and authorization** - Use the built-in access control server or
        plug in your own authentication service for authentication and
        authorization of messaging clients.

      * **Self-service messaging for applications** - The service administrator deploys
        and manages the messaging infrastructure, while applications can request
        messaging resources regardless of the messaging infrastructure.

      * **Support for a wide variety of messaging patterns** - Choose between
        JMS-style messaging with strict guarantees, or messaging that supports
        a larger number of connections and higher throughput.

    ## Post-installation tasks

    To fully use ${olm.csv.name.short}, you need to create a few
    infrastructure components after the installation, including:

      * A messaging infrastructure
      * (Optional) Create RBAC roles to allow users to self-manage addresses and endpoints.

    For a complete overview of how to configure ${olm.csv.name.short}, see
    [Configuring ${olm.csv.name.short}](${olm.csv.doc.configure.url}).

    ### Quickstart infrastructure configuration

    If you simply want to get started quickly, you can import the following
    YAML by saving the content to a file and apply it by running the 
    `oc apply -f <file>` command. You can also split the content (at the `---` marker)
    and import the single YAML document using the Web UI: 

    ~~~yaml
    ---
    apiVersion: enmasse.io/v1
    kind: MessagingInfrastructure
    metadata:
      name: default
    spec: {}
    ~~~

    ### Creating infrastructure using the Web UI

    You must create a new instance of each of the following custom resources. You can
    use the example data directly, which is provided when using the
    Web UI:

      * *MessagingInfrastructure* – Create an instance of messaging infrastructure.

    ## Configuration for messaging tenants

    While service administrators perform the infrastructure configuration, the following
    resources are for the actual users of the system, the messaging tenants.

    You need to create those resources to satisfy your particular use case.

      * *MessagingProject* – Marks a namespace enabled for messaging.
      * *MessagingAddress* – A messaging address (address, topic, queue, and so on)
      * *MessagingEndpoint* – Manages endpoints that messaging clients can connect to.

    ## Enabling the IoT messaging layer

    ${olm.csv.name.short} contains an IoT messaging layer, which is not enabled
    by default. You may enable it by creating an `IoTConfig` resource, in the
    namespace of the ${olm.csv.name.short} installation. The name of the resource
    must be `default`.

    You can then create resources of the type `IoTProject`, which allow you to
    register and connect devices via HTTP, MQTT, Sigfox and LoRaWAN.

    *Note:* The default `IoTConfig` example uses the "file based" device registry.
    It allows you to quicky evaluate the IoT layer. However you must not use this
    in any productive environment.

    *Note:* The default `IoTConfig` examples configures the MQTT adapter with an
    explicit TLS key/certificate stored in the secret `iot-mqtt-adapter-tls`. You
    must provide this secret, under the configured name, in order for the
    MQTT protocol adapter to pick it up.

    *Note*: The `IoTProject` examples assume that you have deployed the example
    plans. If you did not deploy the example plans, or changed their names, you
    must adapt the names in the IoT examples as well.

    For more information on the IoT layer, see: [Getting Started with Internet of Things (IoT) on ${olm.csv.name.short}](${olm.csv.doc.iot.url})

  version: ${olm.version}
  keywords: ${olm.csv.keywords}
  icon:
    - base64data: ${olm.csv.logo.base64}
      mediatype: ${olm.csv.logo.mediatype}
  maintainers:
  - name: ${olm.csv.maintainer.name}
    email: ${olm.csv.maintainer.email}
  provider:
    name: ${olm.csv.maintainer.name}
  labels:
    app: enmasse
  replaces: ${olm.csv.replaces}
  selector:
    matchLabels:
      app: enmasse
  links:
  - name: ${olm.csv.about.name}
    url: ${olm.csv.about.url}
  - name: Documentation
    url: ${olm.csv.doc.url}

  installModes:
  - type: OwnNamespace
    supported: true
  - type: SingleNamespace
    supported: true
  - type: MultiNamespace
    supported: false
  - type: AllNamespaces
    supported: true
  install:
    strategy: deployment
    spec:
      permissions:
      - serviceAccountName: enmasse-operator
        rules:
        - apiGroups: [ "apps" ]
          resources: [ "statefulsets", "statefulsets/finalizers", "deployments", "deployments/finalizers", "replicasets" ]
          verbs: [ "get", "list", "watch", "update", "create", "patch", "delete" ]
        - apiGroups: [ "" ]
          resources: [ "configmaps", "secrets", "secrets/finalizers", "persistentvolumeclaims", "services", "services/finalizers", "pods" ]
          verbs: [ "get", "list", "watch", "update", "create", "patch", "delete", "deletecollection" ]
        - apiGroups: [ "extensions", "networking.k8s.io" ]
          resources: [ "ingresses", "ingresses/status"]
          verbs: [ "create", "update", "patch", "get", "list", "watch", "delete" ]
        - apiGroups: [ "", "route.openshift.io" ]
          resources: [ "routes", "routes/custom-host", "routes/status"]
          verbs: [ "create", "update", "patch", "get", "list", "watch", "delete" ]
        - apiGroups: [ "apps.openshift.io" ]
          resources: [ "deploymentconfigs"]
          verbs: [  "get", "list", "watch" ]
        - apiGroups: ["monitoring.coreos.com"]
          resources: ["servicemonitors"]
          verbs: ["create", "update", "patch", "get", "list", "watch", "delete"]
        - apiGroups: [ "admin.enmasse.io" ]
          resources: [ "consoleservices", "consoleservices/finalizers" ]
          verbs: [ "get", "list", "watch", "update", "create", "patch" ]
        - apiGroups: [ "iot.enmasse.io" ]
          resources: [ "iotconfigs", "iotconfigs/finalizers", "iotconfigs/status", "iotprojects", "iotprojects/finalizers", "iotprojects/status" ]
          verbs: [ "get", "list", "watch", "update", "create", "patch" ]
        - apiGroups: [ "batch" ]
          resources: [ "jobs" ]
          verbs: [ "get", "list", "watch", "update", "create", "patch", "delete" ]
      - serviceAccountName: console-server
        rules:
        - apiGroups: [ "enmasse.io" ]
          resources: [ "messaginginfrastructures", "messagingplans", "messagingaddressplans" ]
          verbs: [ "get", "list", "watch" ]
        - apiGroups: [ "" ]
          resources: [ "services" ]
          verbs: [ "get", "list", "watch" ]
        - apiGroups: [ "" ]
          resources: [ "secrets" ]
          verbs: [ "get" ]
      clusterPermissions:
      - serviceAccountName: enmasse-operator
        rules:
        - apiGroups: [ "oauth.openshift.io" ]
          resources: [ "oauthclients" ]
          verbs: [ "create", "get", "update", "list", "watch" ]
        - apiGroups: [ "enmasse.io" ]
          resources: [ "messagingplans", "messagingplans/finalizers", "messagingplans/status" ]
          verbs: [ "create", "update", "patch", "get", "list", "watch", "delete" ]
        - apiGroups: [ "enmasse.io" ]
          resources: [ "messagingaddressplans", "messagingaddressplans/finalizers", "messagingaddressplans/status" ]
          verbs: [ "create", "update", "patch", "get", "list", "watch", "delete" ]
        - apiGroups: [ "enmasse.io" ]
          resources: [ "messagingaddresses", "messagingaddresses/finalizers", "messagingaddresses/status" ]
          verbs: [ "create", "update", "patch", "get", "list", "watch", "delete" ]
        - apiGroups: [ "enmasse.io" ]
          resources: [ "messagingendpoints", "messagingendpoints/finalizers", "messagingendpoints/status" ]
          verbs: [ "create", "update", "patch", "get", "list", "watch", "delete" ]
        - apiGroups: [ "enmasse.io" ]
          resources: [ "messagingprojects", "messagingprojects/finalizers", "messagingprojects/status" ]
          verbs: [ "create", "update", "patch", "get", "list", "watch", "delete" ]
        - apiGroups: [ "enmasse.io" ]
          resources: [ "messaginginfrastructures", "messaginginfrastructures/finalizers", "messaginginfrastructures/status" ]
          verbs: [ "create", "update", "patch", "get", "list", "watch", "delete" ]
        - apiGroups: [ "iot.enmasse.io" ]
          resources: [ "iotprojects", "iotprojects/finalizers", "iotprojects/status" ]
          verbs: [ "get", "list", "watch", "update", "create", "patch", "delete" ]
        - apiGroups: [ "monitoring.coreos.com" ]
          resources: [ "prometheusrules", "servicemonitors" ]
          verbs: [ "create", "update", "patch", "get", "list", "watch", "delete" ]
        - apiGroups: [ "integreatly.org" ]
          resources: [ "grafanadashboards", "grafanadashboards/finalizers" ]
          verbs: [ "create", "update", "patch", "get", "list", "watch", "delete" ]
        - apiGroups: [ "console.openshift.io" ]
          resources: [ "consolelinks" ]
      - serviceAccountName: console-server
        rules:
        - apiGroups: [ "enmasse.io" ]
          resources: [ "messagingprojects", "messagingendpoints", "messagingaddresses" ]
          verbs: [ "get", "list", "watch" ]
        - apiGroups: [ "" ]
          resources: [ "namespaces" ]
          verbs: [ "get", "list", "watch" ]
      - serviceAccountName: iot-device-connection
        rules:
        - apiGroups: [ "authentication.k8s.io" ]
          resources: [ "tokenreviews" ]
          verbs: [ "create" ]
        - apiGroups: [ "authorization.k8s.io" ]
          resources: [ "subjectaccessreviews" ]
          verbs: [ "create" ]
        - apiGroups: [ "iot.enmasse.io" ]
          resources: [ "iotprojects" ]
          verbs: [ "get", "list", "watch" ]
      - serviceAccountName: iot-device-registry
        rules:
        - apiGroups: [ "authentication.k8s.io" ]
          resources: [ "tokenreviews" ]
          verbs: [ "create" ]
        - apiGroups: [ "authorization.k8s.io" ]
          resources: [ "subjectaccessreviews" ]
          verbs: [ "create" ]
        - apiGroups: [ "iot.enmasse.io" ]
          resources: [ "iotprojects" ]
          verbs: [ "get", "list", "watch" ]
      - serviceAccountName: iot-protocol-adapter
        rules:
        - apiGroups: [ "iot.enmasse.io" ]
          resources: [ "iotprojects" ]
          verbs: [ "get", "list", "watch" ]
      - serviceAccountName: iot-tenant-service
        rules:
        - apiGroups: [ "iot.enmasse.io" ]
          resources: [ "iotprojects" ]
          verbs: [ "get", "list", "watch" ]
      deployments:
      - name: enmasse-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: enmasse
              name: enmasse-operator
          template:
            metadata:
              labels:
                app: enmasse
                name: enmasse-operator
              annotations:
                enmasse.io/version: "${env.VERSION}"
                enmasse.io/revision: "${env.REVISION}"
            spec:
              affinity:
                nodeAffinity:
                  preferredDuringSchedulingIgnoredDuringExecution:
                    - weight: 1
                      preference:
                        matchExpressions:
                          - key: node-role.enmasse.io/operator-infra
                            operator: In
                            values:
                              - "true"
              serviceAccountName: enmasse-operator
              containers:
              - name: controller
                image: ${env.CONTROLLER_MANAGER_IMAGE}
                imagePullPolicy: ${env.IMAGE_PULL_POLICY}
                env:
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: REVISION
                  value: "${env.REVISION}"
                - name: VERSION
                  value: "${env.VERSION}"
                - name: CONTROLLER_DISABLE_ALL
                  value: "true"
                - name: CONTROLLER_ENABLE_MESSAGING_INFRASTRUCTURE
                  value: "true"
                - name: CONTROLLER_ENABLE_MESSAGING_PROJECT
                  value: "true"
                - name: CONTROLLER_ENABLE_MESSAGING_ADDRESS
                  value: "true"
                - name: CONTROLLER_ENABLE_MESSAGING_ENDPOINT
                  value: "true"
                - name: CONTROLLER_ENABLE_CONSOLE_SERVICE
                  value: "false"
                - name: IOT_CONFIG_NAME
                  value: "default"
                - name: OPERATOR_NAME
                  value: "enmasse-operator"
                - name: IMAGE_PULL_POLICY
                  value: "${IMAGE_PULL_POLICY}"
                - name: ENABLE_MONITORING
                  value: "false"
                - name: RELATED_IMAGE_CONTROLLER_MANAGER
                  value: ${env.CONTROLLER_MANAGER_IMAGE}
                - name: RELATED_IMAGE_IOT_AUTH_SERVICE
                  value: ${env.IOT_AUTH_SERVICE_IMAGE}
                - name: RELATED_IMAGE_IOT_DEVICE_CONNECTION_INFINISPAN
                  value: ${env.IOT_DEVICE_CONNECTION_INFINISPAN_IMAGE}
                - name: RELATED_IMAGE_IOT_DEVICE_CONNECTION_JDBC
                  value: ${env.IOT_DEVICE_CONNECTION_JDBC_IMAGE}
                - name: RELATED_IMAGE_IOT_DEVICE_REGISTRY_INFINISPAN
                  value: ${env.IOT_DEVICE_REGISTRY_INFINISPAN_IMAGE}
                - name: RELATED_IMAGE_IOT_DEVICE_REGISTRY_JDBC
                  value: ${env.IOT_DEVICE_REGISTRY_JDBC_IMAGE}
                - name: RELATED_IMAGE_IOT_AMQP_ADAPTER
                  value: ${env.IOT_AMQP_ADAPTER_IMAGE}
                - name: RELATED_IMAGE_IOT_HTTP_ADAPTER
                  value: ${env.IOT_HTTP_ADAPTER_IMAGE}
                - name: RELATED_IMAGE_IOT_MQTT_ADAPTER
                  value: ${env.IOT_MQTT_ADAPTER_IMAGE}
                - name: RELATED_IMAGE_IOT_LORAWAN_ADAPTER
                  value: ${env.IOT_LORAWAN_ADAPTER_IMAGE}
                - name: RELATED_IMAGE_IOT_SIGFOX_ADAPTER
                  value: ${env.IOT_SIGFOX_ADAPTER_IMAGE}
                - name: RELATED_IMAGE_IOT_TENANT_CLEANER
                  value: ${env.IOT_TENANT_CLEANER_IMAGE}
                - name: RELATED_IMAGE_IOT_TENANT_SERVICE
                  value: ${env.IOT_TENANT_SERVICE_IMAGE}
                - name: RELATED_IMAGE_IOT_PROXY_CONFIGURATOR
                  value: ${env.IOT_PROXY_CONFIGURATOR_IMAGE}
                - name: RELATED_IMAGE_ROUTER
                  value: ${env.ROUTER_IMAGE}
                - name: RELATED_IMAGE_BROKER
                  value: ${env.BROKER_IMAGE}
                - name: RELATED_IMAGE_BROKER_PLUGIN
                  value: ${env.BROKER_PLUGIN_IMAGE}
                - name: RELATED_IMAGE_CONSOLE_INIT
                  value: "${env.CONSOLE_INIT_IMAGE}"
                - name: RELATED_IMAGE_CONSOLE_SERVER
                  value: "${env.CONSOLE_SERVER_IMAGE}"
                - name: RELATED_IMAGE_CONSOLE_PROXY_OPENSHIFT
                  value: "${env.CONSOLE_PROXY_OPENSHIFT_IMAGE}"
                - name: RELATED_IMAGE_CONSOLE_PROXY_KUBERNETES
                  value: "${env.CONSOLE_PROXY_KUBERNETES_IMAGE}"
                - name: RELATED_IMAGE_ACCESS_CONTROL_SERVER
                  value: ${env.ACCESS_CONTROL_SERVER_IMAGE}
                - name: "FS_GROUP_FALLBACK_MAP"
                  value: "{}"
                - name: ENABLE_MONITORING
                  value: "true"
                - name: CONSOLE_LINK_SECTION_NAME
                  value: "${application.globalconsole.section.name}"
                - name: CONSOLE_LINK_NAME
                  value: "${application.globalconsole.display.name}"
                - name: CONSOLE_LINK_IMAGE_URL
                  value: "data:${olm.csv.logo.mediatype};base64,${olm.csv.logo.base64}"
  customresourcedefinitions:
    owned:
      - group: enmasse.io
        version: v1
        kind: MessagingInfrastructure
        name: messaginginfrastructures.enmasse.io
        displayName: Messaging Infrastructure
        description: Infrastructure configuration
        statusDescriptors:
          - description: Infrastructure phase
            displayName: Phase
            path: phase
            x-descriptors:
              - 'urn:alm:descriptor:text'
          - description: Infrastructure message
            displayName: Message
            path: message
            x-descriptors:
              - 'urn:alm:descriptor:text'
      - group: enmasse.io
        version: v1
        kind: MessagingAddress
        name: messagingaddresses.enmasse.io
        displayName: Messaging Address
        description: A messaging address that can be used to send/receive messages to/from
        statusDescriptors:
          - description: The address type.
            displayName: Type
            path: type
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: Address phase
            displayName: Phase
            path: phase
            x-descriptors:
              - 'urn:alm:descriptor:text'
          - description: Address message
            displayName: Message
            path: message
            x-descriptors:
              - 'urn:alm:descriptor:text'
      - group: enmasse.io
        version: v1
        kind: MessagingEndpoint
        name: messagingendpoints.enmasse.io
        displayName: Messaging Endpoint
        description: Endpoint configuration
        statusDescriptors:
          - description: Endpoint phase
            displayName: Phase
            path: phase
            x-descriptors:
              - 'urn:alm:descriptor:text'
          - description: Endpoint message
            displayName: Message
            path: message
            x-descriptors:
              - 'urn:alm:descriptor:text'
      - group: enmasse.io
        version: v1
        kind: MessagingProject
        name: messagingprojects.enmasse.io
        displayName: Messaging Tenant
        description: Tenant configuration
        statusDescriptors:
          - description: Tenant phase
            displayName: Phase
            path: phase
            x-descriptors:
              - 'urn:alm:descriptor:text'
          - description: Tenant message
            displayName: Message
            path: message
            x-descriptors:
              - 'urn:alm:descriptor:text'
      - group: enmasse.io
        version: v1
        kind: MessagingPlan
        name: messagingplans.enmasse.io
        displayName: Messaging Plan
        description: Plan configuration
        statusDescriptors:
          - description: Plan phase
            displayName: Phase
            path: phase
            x-descriptors:
              - 'urn:alm:descriptor:text'
          - description: Plan message
            displayName: Message
            path: message
            x-descriptors:
              - 'urn:alm:descriptor:text'
      - group: enmasse.io
        version: v1
        kind: MessagingAddressPlan
        name: messagingaddressplans.enmasse.io
        displayName: Messaging Address Plan
        description: Address Plan configuration
        statusDescriptors:
          - description: Address plan phase
            displayName: Phase
            path: phase
            x-descriptors:
              - 'urn:alm:descriptor:text'
          - description: Address plan message
            displayName: Message
            path: message
            x-descriptors:
              - 'urn:alm:descriptor:text'
      - group: admin.enmasse.io
        version: v1beta1
        kind: ConsoleService
        name: consoleservices.admin.enmasse.io
        displayName: Console Service
        description: Console Service Singleton for deploying global console.
        specDescriptors:
          - description: The discovery Metadata URL
            displayName: Discovery Metadata URL
            path: discoveryMetadataUrl
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: Console certificate secret name
            displayName: Console certificate secret name
            path: certificateSecret.name
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: OAUTH Client Secret Name
            displayName: OAUTH Client Secret Name
            path: oauthClientSecret.name
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: Scope
            displayName: Scope
            path: scope
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'
          - description: Host to use for ingress
            displayName: Host
            path: host
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:text'

      - group: iot.enmasse.io
        version: v1alpha1
        kind: IoTConfig
        name: iotconfigs.iot.enmasse.io
        displayName: IoT Config
        description: IoT Infrastructure Configuration Singleton
        specDescriptors:

          # HTTP adapter

          - description: The number of replicas for the HTTP protocol adapter
            displayName: HTTP adapter replicas
            path: adapters.http.replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'

          # MQTT adapter

          - description: The number of replicas for the MQTT protocol adapter
            displayName: MQTT adapter replicas
            path: adapters.mqtt.replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'

          # Sigfox adapter

          - description: The number of replicas for the Sigfox protocol adapter
            displayName: Sigfox adapter replicas
            path: adapters.sigfox.replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'

          # LoRaWAN adapter

          - description: The number of replicas for the LoRaWAN protocol adapter
            displayName: LoRaWAN adapter replicas
            path: adapters.lorawan.replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'

          # Services

          - description: The number of replicas for the device registry
            displayName: Device registry replicas
            path: services.deviceRegistry.replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'

          - description: The number of replicas for the tenant service
            displayName: Tenant service replicas
            path: services.tenant.replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'

          - description: The number of replicas for the authentication service
            displayName: Authentication service replicas
            path: services.authentication.replicas
            x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'

        statusDescriptors:

          - description: State of the IoT infrastructure.
            displayName: State
            path: state
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.phase'

          - description: URL of the Device registry endpoint.
            displayName: Device Registry Endpoint
            path: services.deviceRegistry.endpoint.uri
            x-descriptors:
              - 'urn:alm:descriptor:org.w3:link'

          - description: URL of the HTTP Protocol adapter endpoint.
            displayName: HTTP Adapter endpoint
            path: adapters.http.endpoint.uri
            x-descriptors:
              - 'urn:alm:descriptor:org.w3:link'

          - description: URL of the LoRaWAN Protocol adapter endpoint.
            displayName: LoRaWAN Adapter endpoint
            path: adapters.lorawan.endpoint.uri
            x-descriptors:
              - 'urn:alm:descriptor:org.w3:link'

          - description: URL of the Sigfox Protocol adapter endpoint.
            displayName: Sigfox Adapter endpoint
            path: adapters.sigfox.endpoint.uri
            x-descriptors:
              - 'urn:alm:descriptor:org.w3:link'

          - description: URL of the MQTT Protocol adapter endpoint.
            displayName: MQTT Adapter endpoint
            path: adapters.mqtt.endpoint.uri
            x-descriptors:
              - 'urn:alm:descriptor:org.w3:link'

      - group: iot.enmasse.io
        version: v1alpha1
        kind: IoTProject
        name: iotprojects.iot.enmasse.io
        displayName: IoT Project
        description: An IoT project instance

        statusDescriptors:
          - description: The name of the tenant, when used in context of IoT functionality.
            displayName: IoT tenant name
            path: tenantName
            x-descriptors:
              - 'urn:alm:descriptor:text'

          - description: Conditions
            displayName: Conditions
            path: conditions
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.conditions'

          - description: The phase of the project.
            displayName: Phase
            path: phase
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.phase'
          - description: Description of the project phase.
            displayName: Reason
            path: phaseReason
            x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes.phase:reason'

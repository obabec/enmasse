TOPDIR=$(dir $(lastword $(MAKEFILE_LIST)))
include $(TOPDIR)/Makefile.env.mk
NAMESPACE       ?= $(shell oc project -q)
MOCHA_FILE      ?= build/test-results/test/TEST-$(PROJECT_NAME).xml
SKIP_TESTS      ?= false
MAVEN_BATCH     ?= true
UNAME_S := $(shell uname -s)
LN=ln
BUILD_GOOS=linux
BUILD_GOARCH=amd64

ifeq ($(UNAME_S),Darwin)
	LN = gln
endif

ifeq ($(MAVEN_BATCH),true)
	MAVEN_ARGS+=-B
endif

all: init build test package

init:
	mkdir -p build

clean_node:
	rm -rf node_modules coverage

clean: clean_node
	rm -rf build

buildpush:
	$(MAKE)
	$(MAKE) docker_tag
	$(MAKE) docker_push

docker_build: package
	if [ -f Dockerfile ]; then $(DOCKER) build $(DOCKER_BUILD_ARGS) --build-arg maven_version=$(MAVEN_VERSION) --build-arg version=$(VERSION) --build-arg commit=$(COMMIT) -t $(PROJECT_PREFIX)-$(PROJECT_NAME):$(VERSION) . ; df ; fi
	if [ -f Dockerfile ]; then $(DOCKER) images | grep $(PROJECT_PREFIX); fi

docker_tag:
	if [ -f Dockerfile ]; then $(DOCKER) tag $(PROJECT_PREFIX)-$(PROJECT_NAME):$(VERSION) $(DOCKER_REGISTRY)/$(DOCKER_ORG)/$(PROJECT_NAME):$(TAG) ; fi
	if [ -f Dockerfile ]; then $(DOCKER) images | grep $(PROJECT_PREFIX); fi

docker_push:
	if [ -f Dockerfile ] ; \
	then \
		bash $(TOPDIR)/scripts/docker_push.sh "$(DOCKER) push $(DOCKER_REGISTRY)/$(DOCKER_ORG)/$(PROJECT_NAME):$(TAG)" 10 10 ; \
	fi
	

.PHONY: all init build test package clean docker_build docker_tag docker_push
